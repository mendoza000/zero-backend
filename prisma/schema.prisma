// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProductVariant {
  id                  String                @id @default(uuid())
  name                String
  price               Float
  color               String?
  size                String?
  quantity            Int
  isAvailable         Boolean               @default(true)
  productId           String
  product             Product               @relation(fields: [productId], references: [id])
  OrderProductVariant OrderProductVariant[]
}

model Product {
  id          String           @id @default(uuid())
  name        String
  description String?
  isPublished Boolean          @default(false)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  variants    ProductVariant[]
}

model Order {
  id        String                @id @default(uuid())
  total     Float
  status    String
  createdAt DateTime              @default(now())
  updatedAt DateTime              @updatedAt
  clientId  String
  client    Client                @relation(fields: [clientId], references: [id])
  products  OrderProductVariant[] // Relación con la tabla intermedia
}

model OrderProductVariant {
  id               String         @id @default(uuid())
  orderId          String
  productVariantId String
  quantity         Int // Cantidad específica de este producto en la orden
  order            Order          @relation(fields: [orderId], references: [id])
  productVariant   ProductVariant @relation(fields: [productVariantId], references: [id])
}

model Client {
  id        String   @id @default(uuid())
  name      String
  email     String
  dni       String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}
